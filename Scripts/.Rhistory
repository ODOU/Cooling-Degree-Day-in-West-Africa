# Import consolidated data ---------------------
Niger=as_tibble(read.csv('../Load_data/Niger_DATA_COMPLETE_DAILY.csv',row.names=1))
# Import packages
rm(list = ls())
library(tibble)
library(dplyr)
library(prophet)
library(forecast)
library(stats)
require(graphics)
library(dpseg)
library(segmented)
library(readxl)
library(tidyr)
library(lubridate)
library(xts)
library(readxl)
library(imputeTS)
library(skimr)
library(biwavelet)
library(ggplot2)
library(cowplot)
library(gridGraphics)
library(ggplottimeseries) # devtools:: install_github("brisneve/ggplottimeseries")
library(ggpubr)
# Import consolidated data ---------------------
Niger=as_tibble(read.csv('../Load_data/Niger_DATA_COMPLETE_DAILY.csv',row.names=1))
BTG = as_tibble(read.csv('Load_data/BENIN_TOGO_DATA_COMPLETE_DAILY.csv'))
# Import consolidated data ---------------------
Niger=as_tibble(read.csv('../Load_data/Niger_DATA_COMPLETE_DAILY.csv',row.names=1))
BTG = as_tibble(read.csv('../Load_data/BENIN_TOGO_DATA_COMPLETE_DAILY.csv'))
Burkina_daily=as_tibble(read.csv('../Load_data/Burkina_DATA_COMPLETE_DAILY.csv',row.names=1))
CIV<-as_tibble(read.csv('../Load_data/CIV_DATA_COMPLETE_DAILY.csv',row.names=1))
SEN<-as_tibble(read.csv('../Load_data/SEN_DATA_COMPLETE_DAILY.csv',row.names=1))
## Use prophet library to decompose the trend
my_plot.decomposed.ts = function(x, title="", ...) {
xx <- x$x
if (is.null(xx))
xx <- with(x, if (type == "additive")
random + trend + seasonal
else random * trend * seasonal)
plot(cbind(observed = xx, trend = x$trend, seasonal = x$seasonal, random = x$random),
main=title, ...)
}
fit_ts_daily <- msts(Niger$Load, seasonal.periods=c(7,365),start=2017)
ts_decompose_daily=decompose(fit_ts_daily,type="multiplicative")
## plot the obs ts, trend & seasonal effect
dat_niger_daily=data.frame(load=ts_decompose_daily$seasonal,Temp=Niger$temp)
lm_dt_daily = lm(load ~ Temp, dat_niger_daily)
(seg_lm_daily<- segmented(lm_dt_daily,npsi = 3))
xx <- dat_niger_daily$Temp
yy <- dat_niger_daily$load
dati= data.frame (x = xx, y = yy)
dat2 = data.frame(Temp = xx, load = broken.line(seg_lm_daily)$fit)
p1=ggplot(dat_niger_daily, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() +
stat_smooth() + labs(title = 'mnnn')+xlab('dd')
my.lines <- seg_lm_daily$psi[, 2][1]
p1=ggplot(dat_niger_daily, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() + labs(title = 'Breakpoint detection')+
geom_vline(xintercept = my.lines, linetype = "dashed")+
ylab("Seasonal factor of load")+stat_smooth(linetype=0)
p2=ggplot2::autoplot(ts_decompose_daily, main='Load decomposition Niger') + theme_bw()
figure <- ggarrange(p2, p1,ncol = 2)
png(filename ="Niger_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
figure <- ggarrange(p2, p1,ncol = 2)
png(filename ="../cdd_output/Figures/Niger_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
## Benin and Togo base temperature computation ---------------------
fit_ts <- msts(BTG$Elec_conso, seasonal.periods=c(7,365),start=2010)
ts_decompose=decompose(fit_ts,type="multiplicative")
seas_load=ts_decompose$seasonal
dat_BN_TG=data.frame(load=seas_load,Temp=BTG$temp)
# Segmeted approach ----------------------------------------
lm_dt= lm(load ~ Temp, dat_BN_TG)
seg_lm <- segmented(lm_dt)
slope(seg_lm)
xx <- dat_BN_TG$Temp
yy <- dat_BN_TG$load
dati= data.frame (x = xx, y = yy)
dat2 = data.frame(Temp = xx, load = broken.line(seg_lm)$fit)
my.lines <- seg_lm$psi[, 2][1]
p1=ggplot(dat_BN_TG, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() + labs(title = 'Breakpoint detection')+
geom_vline(xintercept = my.lines, linetype = "dashed")+
ylab("Seasonal factor of load")+stat_smooth(linetype=0)
p2=ggplot2::autoplot(ts_decompose, main='Load decomposition') + theme_bw()
figure <- ggarrange(p2, p1,ncol = 2)
png(filename ="../cdd_output/Figures/Benin_Togo_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
## Burkina Faso -------------------------------------------------------------------
fit_ts <- msts(Burkina_daily$Load,seasonal.periods=c(7))
ts_decompose=decompose(fit_ts,type="multiplicative")
seas_load=ts_decompose$seasonal
dat_bf=data.frame(load=seas_load,Temp=Burkina_daily$Temp)
# Segmeted approach ----------------------------------------
lm_dt= lm(load ~ Temp,dat_bf)
seg_lm <- segmented(lm_dt)
seg_lm
slope(seg_lm)
xx <- dat_bf$Temp
yy <- dat_bf$load
dati= data.frame (x = xx, y = yy)
dat2 = data.frame(Temp = xx, load = broken.line(seg_lm)$fit)
my.lines <- seg_lm$psi[, 2][1]
p1=ggplot(dat_bf, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() + labs(title = 'Breakpoint detection')+
geom_vline(xintercept = my.lines, linetype = "dashed")+
ylab("Seasonal factor of load")+stat_smooth(linetype=0)
p2=ggplot2::autoplot(ts_decompose, main='Load decomposition') + theme_bw()
figure <- ggarrange(p2, p1,ncol = 2)
png(filename ="../cdd_output/Figures/Burkina_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
## Cote d'Ivoire decompositon and base temperature calculation --------------
fit_ts <- msts(CIV$Load, seasonal.periods=c(7,365),start=2017)
ts_decompose=decompose(fit_ts,type="multiplicative")
seas_load=ts_decompose$seasonal
dat_civ=data.frame(load=seas_load,Temp=CIV$temp)
# Segmeted approach ------------------
lm_dt= lm(load ~ Temp,dat_civ)
seg_lm <- segmented(lm_dt,npsi=5)
seg_lm
slope(seg_lm)
#----------------------------------------------------------------------#
xx <- dat_civ$Temp
yy <- dat_civ$load
dati= data.frame (x = xx, y = yy)
dat2 = data.frame(Temp = xx, load = broken.line(seg_lm)$fit)
my.lines <- seg_lm$psi[, 2][1]
p1=ggplot(dat_civ, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() + labs(title = 'Breakpoint detection')+
geom_vline(xintercept = my.lines, linetype = "dashed")+
ylab("Seasonal factor of load")+stat_smooth(linetype=0)
p2=ggplot2::autoplot(ts_decompose, main='Load decomposition') + theme_bw()
figure <- ggarrange(p2, p1,ncol = 2)
png(filename ="../cdd_output/Figures/Ivory_Coast_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
## Senegal decompositon and base temperature calculation -----------------------------------
fit_ts <- msts(SEN$Load, seasonal.periods=c(7,365),start=2017)
ts_decompose=decompose(fit_ts,type="multiplicative")
seas_load=ts_decompose$seasonal
dat_sen=data.frame(load=seas_load,Temp=SEN$temp)
# Segmeted approach ------------------
lm_dt= lm(load ~ Temp,dat_sen)
seg_lm <- segmented(lm_dt,npsi=5)
seg_lm
slope(seg_lm)
summary(seg_lm)
xx <- dat_sen$Temp
yy <- dat_sen$load
dati= data.frame (x = xx, y = yy)
dat2 = data.frame(Temp = xx, load = broken.line(seg_lm)$fit)
my.lines <- seg_lm$psi[, 2][1]
p1=ggplot(dat_sen, aes(x =Temp, y= load)) +
geom_line(data = dat2, color = 'black',size=0.8)+ theme_bw() + labs(title = 'Breakpoint detection')+
geom_vline(xintercept = my.lines, linetype = "dashed")+
ylab("Seasonal factor of load")+stat_smooth(linetype=0)
p2=ggplot2::autoplot(ts_decompose, main='Load decomposition') + theme_bw()
figure <- ggarrange(p2, p1,ncol = 2)
figure
png(filename ="../cdd_output/Figures/Senegal_decompose_breakpoints.png",width =600, height =300,res =90,
type = "cairo",bg = "transparent")
figure
dev.off()
Benin=read.csv("../Load_data/BENIN_DATA_COMPLETE_DAILY.csv", row.names=1)
CIV= read.csv("../Load_data/CIV_DATA_COMPLETE_DAILY.csv", row.names=1)
NIG=read.csv("../Load_data/Niger_DATA_COMPLETE_DAILY.csv", row.names=1)
SEN=read.csv("../Load_data/SEN_DATA_COMPLETE_DAILY.csv", row.names=1)
TG=read.csv("../Load_data/TOGO_DATA_COMPLETE_DAILY.csv", row.names=1)
Burkina<- read_excel('../Load_data/Burkina_Faso_SONABEL_demand_era.xlsx',sheet = 'Sheet1')
tim=seq(as.POSIXct('2018-01-01'),as.POSIXct('2018-12-31 23:00:00'), by="hour")
Burkina$Date=tim
Burkina$Month=format(Burkina$Date,"%B")
range(Benin$Load_Benin/1000)
range(CIV$Load/1000)
range(NIG$Load/1000)
range(SEN$Load/1000000)
range(TG$Load_Togo/1000)
# ------------------------Multiplot ---------------
CairoPNG(file="../CDD_PROCESS/cdd_output/Figures/Figure4_Mutiplot_load_countries_temperature.png",bg = "transparent",width=700, height =750,res=100)
par(family = "B",par(mfrow=c(6,2)),mar = c(3,4,1.5,3))
boxplot(Benin$Load_Benin/1000~ month(Benin$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal load profile - Benin")
monmean_bn= Benin %>% group_by(Month)%>%
summarise(Load=mean(Load_Benin,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_bn$Load/1000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_bn$Load/1000)),las=2)
box()
mtext("GWh", side=2, line=2.5, font=2)
boxplot(Benin$temp ~ month(Benin$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal temperature profile - Benin",ylim=c(15,45))
monmean_bn= Benin %>% group_by(Month)%>%
summarise(temp=mean(temp,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_bn$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_bn$temp)),las=2)
box()
mtext("Deg C ", side=4, line=1, font=2)
boxplot(TG$Load_Togo/1000~ month(TG$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal Load profile - Togo")
monmean_tg= TG %>% group_by(Month)%>%
summarise(Load=mean(Load_Togo,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_tg$Load/1000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_tg$Load/1000)),las=2)
box()
mtext("GWh ", side=2, line=2.5, font=2)
boxplot(TG$temp~ month(TG$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal temperature profile - Togo",ylim=c(15,45))
monmean_tg= TG %>% group_by(Month)%>%
summarise(temp=mean(temp,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_tg$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_tg$temp)),las=2)
box()
mtext("", side=4, line=3, font=2)
boxplot(CIV$Load/1000~ month(CIV$Date),axes=FALSE,ylab="", xlab="Months",
main="Seasonal load profile - Cote d'Ivoire")
monmean_CIV= CIV %>% group_by(Month)%>%
summarise(Load=mean(Load,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_CIV$Load/1000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_CIV$Load/1000)),las=2);
box()
mtext(" GWh ", side=2, line=2.5, font=2)
boxplot(CIV$temp ~ month(CIV$Date),axes=FALSE,ylab="", xlab="Months",
main="Seasonal temperature profile - Cote d'Ivoire",ylim=c(15,45))
monmean_CIV= CIV %>% group_by(Month)%>%
summarise(temp=mean(temp,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_CIV$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_CIV$temp)),las=2);
box()
mtext("", side=4, line=3, font=2)
boxplot(NIG$Load/1000~ month(NIG$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal load profile - Niger")
monmean_nig= NIG %>% group_by(Month)%>%
summarise(Load=mean(Load,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_nig$Load/1000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_nig$Load/1000)),las=2)
box()
mtext(" GWh ", side=2, line=2.5, font=2)
boxplot(NIG$temp~ month(NIG$Date),axes=FALSE,ylab="", xlab="Months",
main="Seasonal temperature profile - Niger",ylim=c(15,45))
monmean_nig= NIG %>% group_by(Month)%>%
summarise(temp=mean(temp,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_nig$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_nig$temp)),las=2)
box()
mtext("", side=4, line=3, font=2)
boxplot(Burkina$`Load (MW)`/1000~ month(Burkina$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal load profile - Burkina Faso")
monmean_BF= Burkina %>% group_by(Month)%>%
summarise(Load=mean(`Load (MW)`,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_BF$Load/1000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels =rep("",12),las=3.5)
axis(2,t = round(pretty(range(monmean_BF$Load/1000)),1),las=2)
box()
mtext(" GW ", side=2, line=2.5, font=2)
boxplot(Burkina$`Air Temp`~ month(Burkina$Date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal temperature profile - Burkina Faso",ylim=c(15,45))
monmean_BF= Burkina %>% group_by(Month)%>%
summarise(temp=mean(`Air Temp`,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_BF$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = rep("",12),las=3.5)
axis(2,t = pretty(range(monmean_BF$temp)),las=2)
box()
mtext("", side=4, line=3, font=2)
boxplot(SEN$Load/1000000~ month(SEN$date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal load profile - Senegal")
monmean_SEN= SEN %>% group_by(Month)%>%
summarise(Load=mean(Load,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_SEN$Load/1000000,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = month.abb,las=3.5)
axis(2,t = pretty(range(monmean_SEN$Load/1000000)),las=2)
box()
mtext("GWh", side=2, line=2.5, font=2)
boxplot(SEN$temp~ month(SEN$date),axes=FALSE,ylab=" ", xlab="Months",
main="Seasonal temperature profile - Senegal",ylim=c(15,45))
monmean_SEN= SEN %>% group_by(Month)%>%
summarise(temp=mean(temp,na.rm = TRUE))%>% arrange(match(Month,month.name))
lines(1:12,monmean_SEN$temp,col="#ff7f00",lwd=2)
axis(1,at=c(1:12),labels = month.abb,las=3.5)
axis(2,t = pretty(range(monmean_SEN$temp)),las=2)
box()
mtext("Deg C", side=4, line=1, font=2)
dev.off()
source("~/cloud_aws/Article_submission/CDD_PROCESS/Scripts/Seasonal_load_profile_West_Africa.R", echo=TRUE)
source("~/cloud_aws/Article_submission/CDD_PROCESS/Scripts/Seasonal_load_profile_West_Africa.R", echo=TRUE)
